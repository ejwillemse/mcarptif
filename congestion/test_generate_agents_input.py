# -*- coding: utf-8 -*-
"""Input data for `test_generate_agents.py` unit test.

History:
    Created on 1 March Feb 2018
    @author: Dr. Elias J. Willemse
    @contact: ejwillemse@gmail.com
    @license: GNU GENERAL PUBLIC LICENSE
"""
import pandas as pd


def return_solution_full(instance='Lpr_IF-c-01'):
    """Return full solution for instance generated using five-rule path
    scanning and neutral-accelerated-tabu-search.

    Initial solution was generated as follows:

        Generated using:
            MCARPTIF_solvers/MS/py_alg_extended_path_scanning_rr as EPS
            solver = EPS.EPS_IF(instance_info)

        Settings and call:
            solution = solver.EPS_IF_solver(rule_type='EPS_all_rules')[0][0]

    The initial solution was improved as follows:

        Improved using:
            MCARPTIF_solvers/MS/LS_MCARPTIF
            improve = LS_MCARPTIF.TabuSearch_MCARPTIF(instance_info, nn_list,
                            testAll=False, autoInvCosts = False)

        Settings:
            compoundMoves = True
            newCompoundMoves = False
            tabuTenure = 5
            tabuThreshold = 1
            tabuMoveLimit = 1000
            saveOutput = False
            improve._printOutput = False
            improve.suppressOutput = False
            nnFrac = 1
            maxNonImprovingMoves = 100
            improve.setTabuSearchParameters(compoundMoves, newCompoundMoves,
                tabuTenure, tabuThreshold, nnFrac, tabuMoveLimit,
                maxNonImprovingMoves, saveOutput)

        Call:
            solution_full = improve.improveSolution(solution)

    These settings should be used when generating full solution for test
    instances.

    Args:
        instance (string): instance name of solution to be returned.

    Return:
        solution_full (dict): a full solution dictionary for the MCARPTIF.

    """

    if instance == 'Lpr_IF-c-01':
        solution_full = {0: {'Cost': 18761,
                             'CumLoad': [[0,
                                          579,
                                          727,
                                          1225,
                                          1635,
                                          1951,
                                          2228,
                                          2466,
                                          2766,
                                          3192,
                                          3777,
                                          4260,
                                          4500,
                                          4840,
                                          4868,
                                          5159,
                                          5788,
                                          5941,
                                          6229,
                                          6275,
                                          6750,
                                          7165,
                                          7339,
                                          7418,
                                          7547,
                                          8003,
                                          8079,
                                          8079],
                                         [0,
                                          534,
                                          1272,
                                          1325,
                                          1408,
                                          1807,
                                          2266,
                                          2535,
                                          2934,
                                          3216,
                                          3335,
                                          3368,
                                          3577,
                                          4023,
                                          4566,
                                          4896,
                                          5372,
                                          5503,
                                          6019,
                                          6609,
                                          6755,
                                          7348,
                                          7364,
                                          8111,
                                          8583,
                                          8583,
                                          8583]],
                             'CumServe': [[0,
                                           612,
                                           815,
                                           1352,
                                           1784,
                                           2140,
                                           2470,
                                           2744,
                                           3062,
                                           3528,
                                           4131,
                                           4656,
                                           4916,
                                           5294,
                                           5366,
                                           5675,
                                           6342,
                                           6517,
                                           6827,
                                           6895,
                                           7390,
                                           7822,
                                           8036,
                                           8169,
                                           8316,
                                           8813,
                                           8954,
                                           9269],
                                          [0,
                                           553,
                                           1310,
                                           1380,
                                           1489,
                                           1914,
                                           2392,
                                           2678,
                                           3105,
                                           3400,
                                           3537,
                                           3588,
                                           3817,
                                           4287,
                                           4850,
                                           5196,
                                           5709,
                                           5859,
                                           6405,
                                           7016,
                                           7188,
                                           7800,
                                           7837,
                                           8621,
                                           9108,
                                           9108,
                                           9498]],
                             'CumUpdate': False,
                             'Deadhead': 964,
                             'Load': 16662,
                             'Service': 17797,
                             'TripCosts': [9263, 9498],
                             'TripDeadheads': [526, 438],
                             'TripLoads': [8079, 8583],
                             'TripServices': [8737, 9060],
                             'Trips': [[0,
                                        14,
                                        16,
                                        48,
                                        66,
                                        86,
                                        8,
                                        7,
                                        51,
                                        47,
                                        35,
                                        32,
                                        21,
                                        22,
                                        28,
                                        42,
                                        39,
                                        3,
                                        24,
                                        26,
                                        30,
                                        44,
                                        57,
                                        9,
                                        4,
                                        19,
                                        36,
                                        1],
                                       [1,
                                        54,
                                        69,
                                        70,
                                        75,
                                        12,
                                        72,
                                        59,
                                        5,
                                        10,
                                        13,
                                        11,
                                        88,
                                        83,
                                        77,
                                        78,
                                        90,
                                        85,
                                        64,
                                        81,
                                        63,
                                        61,
                                        6,
                                        40,
                                        53,
                                        1,
                                        0]],
                             'nTrips': 2},
                         'ProblemType': 'CLARPIF',
                         'TotalCost': 18761.0,
                         'nVehicles': 1}

    if instance == 'Lpr_IF-c-02':
        solution_full = {0: {'Cost': 27327,
                         'CumLoad': [[0,
                                      330,
                                      587,
                                      706,
                                      923,
                                      1147,
                                      1841,
                                      1941,
                                      2045,
                                      2305,
                                      2883,
                                      3385,
                                      3461,
                                      3640,
                                      3779,
                                      3862,
                                      4537,
                                      4684,
                                      5143,
                                      5531,
                                      5584,
                                      6127,
                                      6311,
                                      6374,
                                      6825,
                                      7034,
                                      7448,
                                      7726,
                                      7987,
                                      8275,
                                      8477,
                                      8980,
                                      9247,
                                      9247],
                                     [0,
                                      208,
                                      505,
                                      661,
                                      1029,
                                      1545,
                                      2012,
                                      2710,
                                      2858,
                                      3052,
                                      3071,
                                      3738,
                                      4225,
                                      4352,
                                      4917,
                                      5283,
                                      5575,
                                      6054,
                                      6271,
                                      6320,
                                      6626,
                                      6901,
                                      7184,
                                      7684,
                                      8277,
                                      8445,
                                      9013,
                                      9094,
                                      9094],
                                     [0,
                                      376,
                                      937,
                                      1174,
                                      1365,
                                      1677,
                                      1899,
                                      2122,
                                      2372,
                                      2654,
                                      3169,
                                      3289,
                                      3721,
                                      4138,
                                      4522,
                                      4609,
                                      5004,
                                      5510,
                                      5510,
                                      5510]],
                         'CumServe': [[0,
                                       375,
                                       706,
                                       840,
                                       1075,
                                       1313,
                                       2027,
                                       2146,
                                       2306,
                                       2605,
                                       3223,
                                       3758,
                                       3874,
                                       4074,
                                       4256,
                                       4360,
                                       5072,
                                       5258,
                                       5735,
                                       6179,
                                       6273,
                                       6831,
                                       7036,
                                       7127,
                                       7599,
                                       7830,
                                       8275,
                                       8569,
                                       8888,
                                       9192,
                                       9429,
                                       9985,
                                       10271,
                                       10571],
                                      [0,
                                       226,
                                       573,
                                       792,
                                       1236,
                                       1773,
                                       2281,
                                       2998,
                                       3190,
                                       3405,
                                       3445,
                                       4149,
                                       4650,
                                       4802,
                                       5404,
                                       5807,
                                       6130,
                                       6626,
                                       6865,
                                       6932,
                                       7257,
                                       7575,
                                       7895,
                                       8453,
                                       9064,
                                       9301,
                                       9889,
                                       10010,
                                       10310],
                                      [0,
                                       395,
                                       977,
                                       1228,
                                       1442,
                                       1771,
                                       2014,
                                       2278,
                                       2570,
                                       2910,
                                       3462,
                                       3612,
                                       4081,
                                       4527,
                                       4931,
                                       5039,
                                       5456,
                                       5995,
                                       6013,
                                       6446]],
                         'CumUpdate': True,
                         'Deadhead': 1524,
                         'Load': 23851,
                         'Service': 25803,
                         'TripCosts': [10571, 10310, 6446],
                         'TripDeadheads': [485, 535, 504],
                         'TripLoads': [9247, 9094, 5510],
                         'TripServices': [10086, 9775, 5942],
                         'Trips': [[0,
                                    28,
                                    84,
                                    88,
                                    96,
                                    19,
                                    130,
                                    136,
                                    144,
                                    123,
                                    120,
                                    83,
                                    79,
                                    51,
                                    48,
                                    52,
                                    47,
                                    43,
                                    44,
                                    41,
                                    5,
                                    69,
                                    10,
                                    14,
                                    114,
                                    118,
                                    81,
                                    75,
                                    63,
                                    59,
                                    35,
                                    60,
                                    92,
                                    1],
                                   [1,
                                    16,
                                    126,
                                    138,
                                    170,
                                    172,
                                    143,
                                    140,
                                    146,
                                    25,
                                    24,
                                    174,
                                    161,
                                    151,
                                    154,
                                    177,
                                    158,
                                    164,
                                    178,
                                    167,
                                    163,
                                    157,
                                    125,
                                    153,
                                    149,
                                    117,
                                    113,
                                    18,
                                    1],
                                   [1,
                                    17,
                                    110,
                                    101,
                                    98,
                                    73,
                                    70,
                                    76,
                                    103,
                                    11,
                                    37,
                                    32,
                                    38,
                                    66,
                                    95,
                                    13,
                                    64,
                                    90,
                                    1,
                                    0]],
                         'nTrips': 3},
                     1: {'Cost': 9066,
                         'CumLoad': [[0,
                                      289,
                                      680,
                                      851,
                                      1177,
                                      1292,
                                      1621,
                                      2020,
                                      2283,
                                      2850,
                                      3201,
                                      3272,
                                      3634,
                                      4290,
                                      4647,
                                      4990,
                                      5420,
                                      5781,
                                      5915,
                                      6145,
                                      6371,
                                      6745,
                                      7041,
                                      7599,
                                      7867,
                                      7867,
                                      7867]],
                         'CumServe': [[0,
                                       327,
                                       742,
                                       937,
                                       1304,
                                       1457,
                                       1807,
                                       2227,
                                       2539,
                                       3140,
                                       3528,
                                       3618,
                                       4004,
                                       4696,
                                       5092,
                                       5474,
                                       5942,
                                       6336,
                                       6512,
                                       6784,
                                       7047,
                                       7458,
                                       7775,
                                       8347,
                                       8633,
                                       8633,
                                       9066]],
                         'CumUpdate': True,
                         'Deadhead': 452,
                         'Load': 7867,
                         'Service': 8614,
                         'TripCosts': [9066],
                         'TripDeadheads': [452],
                         'TripLoads': [7867],
                         'TripServices': [8614],
                         'Trips': [[0,
                                    26,
                                    3,
                                    4,
                                    30,
                                    12,
                                    6,
                                    9,
                                    7,
                                    57,
                                    54,
                                    8,
                                    86,
                                    105,
                                    106,
                                    132,
                                    168,
                                    135,
                                    22,
                                    23,
                                    21,
                                    20,
                                    129,
                                    109,
                                    15,
                                    1,
                                    0]],
                         'nTrips': 1},
                     'ProblemType': 'CLARPIF',
                     'TotalCost': 36393.0,
                     'nVehicles': 2}

    return solution_full


def return_agents(instance='Lpr_IF-c-01'):
    """Return agents for the instance solution saved as csv file.

    Args:
        instance (string): instance name of solution to be returned.

    Return:
        agents (dict of route data frames): a dictionary of routes, each encoded
            as a pandas data frame.
    """
    solution_csv_path = 'test_input/test_' + instance + \
                        '_tabu_improved_decoded.csv'
    solution_df = pd.read_csv(solution_csv_path)

    route_ids = pd.unique(solution_df['Route'])

    agents = {}
    route_ids = pd.unique(solution_df['Route'])
    for agent_key, route_i in enumerate(route_ids):
        agents[agent_key] = solution_df.query('Route == {0}'.format(route_i))

    return agents


def return_added_agents(instance='Lpr_IF-c-01'):
    """Return agents for the Lpr_IF-c-01 solution returned with
    the return_solution_full() module, and copied for two routes.

    Args:
        instance (string): instance name of solution to be returned.

    Return:
        agents (dict of route data frames): a dictionary of routes, each encoded
            as a pandas data frame.
    """
    agents = return_agents(instance)
    max_key = max(agents.keys())
    agents[max_key + 1] = agents[0].copy()

    return agents


def return_removed_agents(instance='Lpr_IF-c-01'):
    """Return agents for the Lpr_IF-c-01 solution returned with
    the return_solution_full() module, and copied for two routes.

    Args:
        instance (string): instance name of solution to be returned.

    Return:
        agents (dict of route data frames): a dictionary of routes, each encoded
            as a pandas data frame.
    """
    agents = return_agents(instance)
    del agents[0]

    return agents
